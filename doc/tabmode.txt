*tabmode.txt*          Plugin for managing tabs
*vim-tabmode*

Forked From: vim-tabmode - https://github.com/dstein64/vim-tabmode
Original Author: Daniel Steinberg - https://www.dannyadam.com

Tabmode Author: Iron_E
Tabmode Web: https://gitlab.com/Iron_E/vim-tabmode

1. Requirements                            |tabmode-requirements|
2. Installation                            |tabmode-installation|
3. Usage                                   |tabmode-usage|
4. Configuration                           |tabmode-configuration|

|vim-tabmode| is a Vim plugin for managing windows. Built-in functionality includes
window selection, window buffer swapping, and window resizing. The plugin is
extensible, allowing additional functionality to be added (see
|tabmode-configuration| below).

============================================================================
1. Requirements                            *tabmode-requirements*

* Full functionality
  - `vim>=8.2` or `nvim>=0.4.0`

============================================================================
2. Installation                            *tabmode-installation*

Use |packages| or one of the various package managers.

============================================================================
3. Usage                                   *tabmode-usage*
                                                               *:Tabmode*
Enter |vim-tabmode| with <leader><Tab> or |:Tabmode|.

Key         Use                                                  Modifiers
---         ---                                                  ---------
`w`/`h`/`j` Tab left                                             `<shift>` to move the current tab.
`b`/`k`/`l` Tab right                                            `<shift>` to move the current tab.
`<esc>`     Leave `tabmode`
`?`         Show help message
`a`         Insert a tab and switch to it.
`A`         Append new tab at the end of tab list
`c`         to the right with a single new tab.                  Prepend number `N` to replace `N` tabs.
`d`         (__e.g.__ `2d`).                                     Prepend number `N` to delete `N` tabs.
`dd`        Delete the current tab.
`D`         Delete all tabs to the right of the current tab.
`i`/`I`     Insert a tab and leave it empty.
`s`         Replace the current tab with a new tab.
`S`         Replace all tabs to the right with a single new tab.

============================================================================
4. Configuration                           *tabmode-configuration*

By default, |vim-tabmode| is started with <leader><Tab> or |:Tabmode|. These will not be
clobbered in case they are already used. The |:Tabmode| command takes an optional
argument specifying how many |vim-tabmode| commands to run (e.g., `:Tabmode 1` would
exit |vim-tabmode| after the first command). If the optional argument is `0`, which
is the default, |vim-tabmode| runs until exit.
>
	" The following defaults can be customized in your .vimrc
	map <leader><Tab> <Plug>TabmodeEnter
	command! Tabmode :call tabmode#Enter()
<

Color Customization ~
                                           *tabmode-color-customization*
The following highlight groups can be configured to change |vim-tabmode|'s colors.

Name              Default      Description
----              -------      -----------
`TabmodeActive`   `ModeMsg`    Color for the header row text
`TabmodeInactive` `Type`       Color for sourcing event names
`TabmodeNeighbor` `Identifier` Color for other event names
`TabmodeStar`     `Directory`  Color for the time column
`TabmodePrompt`   `Special`    Color for the percent column

The highlight groups can be customized in your |.vimrc|, as shown in the
following example.
>
	" Link TabmodeActive highlight to Error highlight
	highlight link TabmodeActive Error
	" Specify custom highlighting for TabmodeInactive
	highlight TabmodeInactive term=bold ctermfg=12 ctermbg=159 guifg=Blue guibg=LightCyan
<

============================================================================
 vim:tw=78:ts=4:ft=help:norl:
